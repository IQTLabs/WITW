#!/usr/bin/env bash

# Bash script to build WITW dataset.  Assumes that satellite image strips
# have already been formatted and that Flickr photos have already been
# downloaded.

dataset_folder=/local_data/geoloc/dataset
records_folder=/local_data/geoloc/records
flickr_folder=/local_data/geoloc/terrestrial/download
tiles_folder=/local_data/geoloc/sat/tiles
places_folder=~/src/geoloc/places/places365

# mkdir -p $records_folder
# mkdir -p $dataset_folder
# mkdir -p $dataset_folder/surface
# mkdir -p $dataset_folder/overhead

# # Make CSV file for all available photos
# echo CSV file of all images
# ./sitetiles.py csv
# cp $dataset_folder/dataset.csv $records_folder/dataset_orig.csv

# # Identify and remove single-band photos
# echo Remove single-band images
# #bash -c "cd $flickr_folder && find | sort | xargs file | grep 'frames 1' | awk '{if (\$(NF) == 1) print(\$1)}' | cut -d'/' -f3 | cut -d'_' -f1 > $records_folder/id_remove_singleband.txt"
# ./filter_csv $records_folder/dataset_orig.csv $records_folder/dataset_multiband.csv $records_folder/id_remove_singleband.txt remove

# # Identify and remove indoor photos
# echo Remove indoor images
# #bash -c "cd $places_folder && find $flickr_folder -name '*.jpg' | sort | xargs python run_placesCNN_cut.py | awk '{if (\$(NF) == 1) print(\$1)}' | cut -d'/' -f7 | cut -d'_' -f1 > $records_folder/id_retain_outdoor.txt"
# ./filter_csv $records_folder/dataset_multiband.csv $records_folder/dataset_outdoor.csv $records_folder/id_retain_outdoor.txt retain

# # Identify and remove photos on a preset list
# echo Remove designated images
# if [ -s $records_folder/id_remove_list.txt ]; then
#     ./filter_csv $records_folder/dataset_outdoor.csv $records_folder/dataset_pastlist.csv $records_folder/id_remove_list.txt remove
# else
#     cp $records_folder/dataset_outdoor.csv $records_folder/dataset_pastlist.csv
# fi

# # Generate satellite imagery tiles
# echo Generate satellite tiles
# cp $records_folder/dataset_pastlist.csv $dataset_folder/dataset.csv
# ./sitetiles.py dataset

# # Identify and remove blank or partially-blank satellite images
# echo Remove partially-blank satellite tiles
# find $tiles_folder -type f | sort | xargs ./zero_frac.py | awk '{if ($(NF) > 0.05) print($1)}' | cut -d'/' -f6 | cut -d'.' -f1 > $records_folder/id_remove_satblank.txt
# ./filter_csv $records_folder/dataset_pastlist.csv $records_folder/dataset_withsat.csv $records_folder/id_remove_satblank.txt remove

# # Copy CSV file into dataset and make train/test split
# cp $records_folder/dataset_withsat.csv $dataset_folder/dataset.csv
# grep -E '(aoi_name|Rio de Janeiro|Las Vegas|Shanghai|Khartoum|Atlanta|Moscow|Mumbai|San Juan|Dar es Salaam|Rotterdam)' $dataset_folder/dataset.csv > $dataset_folder/train.csv
# grep -E '(aoi_name|Paris)' $dataset_folder/dataset.csv > $dataset_folder/test.csv

# Copy Flickr photos into dataset
echo Copy Flickr photos
aoi_codes=( 01_rio 02_vegas 03_paris 04_shanghai 05_khartoum 06_atlanta 07_moscow 08_mumbai 09_san 10_dar 11_rotterdam )
while IFS= read -r line; do
    id=$(echo $line | cut -d',' -f1 | sed 's/"//g'); url=$(echo $line | cut -d',' -f6 | sed 's/"//g'); filename=$(echo $url | sed 's~/~ ~g' | awk '{print $NF}'); aoi=$(echo $line | cut -d',' -f9); aoi_code=${aoi_codes[aoi-1]}; sourcefile=$flickr_folder/$aoi_code/$filename; cp $sourcefile $dataset_folder/surface/$id.jpg
done <<< $(cat $dataset_folder/dataset.csv | tail -n +2)

# Copy satellite images into dataset
echo Copy satellite photos
for id in $(<$dataset_folder/dataset.csv cut -d',' -f1 | tail -n +2 | sed 's/"//g'); do cp $tiles_folder/$id.jpg $dataset_folder/overhead/$id.jpg; done
